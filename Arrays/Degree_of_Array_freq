
class Solution {
    private class Element{
    int index;
    int freq;
    public Element(int index,int freq)
    {
        this.index = index;
        this.freq = freq;
    }
    }
    public int findShortestSubArray(int[] nums) {
        HashMap<Integer,Element> map = new HashMap();
        int maxFreq =0;
        int min = Integer.MAX_VALUE;
        for(int i=0;i<nums.length;i++)
        {
            if(map.containsKey(nums[i]))
            {
                Element elem = map.get(nums[i]);
                elem.index = i;
                elem.freq+=1;
                //map.replace(nums[i],elem);
            }
            else{
                map.put(nums[i],new Element(i,1));
            }
            maxFreq = Math.max(maxFreq,map.get(nums[i]).freq);
            
        }
        for(int i=0;i<nums.length;i++)
        {
            Element temp = map.get(nums[i]);
            if(temp.freq == maxFreq && i!=temp.index)
            {
                min = Math.min(min,temp.index-i+1);
                temp.freq--;
            }
        }
        return (min==Integer.MAX_VALUE?1:min);
    }
}
